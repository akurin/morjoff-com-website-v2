<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Alexey Kurin</title>
    <link>https://morjoff.com/posts/</link>
    <description>Recent content in Posts on Alexey Kurin</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 06 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://morjoff.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>json.Unmarshal Doesn&#39;t Clear Your Struct: A Pagination Bug Story</title>
      <link>https://morjoff.com/posts/json-unmarshal-bug/</link>
      <pubDate>Mon, 06 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://morjoff.com/posts/json-unmarshal-bug/</guid>
      <description>Recently, I stumbled upon a rather interesting bug in one of my Go projects. It wasn&amp;rsquo;t a complex issue, but it highlighted a subtle pitfall related to how we often handle JSON responses, particularly when dealing with pagination. Let me share the story.&#xA;The Setup Our project involves a microservice, let&amp;rsquo;s call it the &amp;ldquo;User Service&amp;rdquo;, that provides user data. Another microservice, let&amp;rsquo;s call it the &amp;ldquo;User Consumer,&amp;rdquo; needs to replicate users from the User Service.</description>
    </item>
  </channel>
</rss>
